/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visual;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.border.Border;
import java.io.IOException;
import java.net.InetAddress;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;
import javax.swing.text.rtf.RTFEditorKit;
import java.sql.Connection;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSlider;
import javax.swing.JTextArea;
import javax.swing.JToggleButton;
import javax.swing.text.Document;

/**
 *
 * @author Alfredo Silva
 */
public class Body extends javax.swing.JFrame implements Observador {

    /**
     * Creates new form Body
     */
    public Body(String nomeObservador, Observado observado, JTextPane pagina, Conexao conexao) {
        this.nomeObservador = nomeObservador;
        this.instancia = observado;
        this.pagina = pagina;
        this.conexao = conexao;
        observado.incluirObservador(this);
        pagina.setStyledDocument(pagina.getStyledDocument());
        initComponents();
        setLocationRelativeTo(null);
        this.pagina.setBorder(BorderFactory.createCompoundBorder(bordaPagina, BorderFactory.createEmptyBorder(2, bordaEsquerda, 2, bordaDireita)));
        limparFormatacao();
        atualizaLabelBarraDeStatus(arquivo);
        atualizar(pagina.getStyledDocument());
        instancia.notificarObservadores();
        this.setVisible(true);
    }
    
    /*public Body() {
        //this.observadores = new ArrayList<>();
        //this.nomeObservador = nomeObservador;
        //observado.incluirObservador(this);
        initComponents();
        //setExtendedState(MAXIMIZED_BOTH);
        pagina.setBorder(BorderFactory.createCompoundBorder(bordaPagina, BorderFactory.createEmptyBorder(2, bordaEsquerda, 2, bordaDireita)));
        limparFormatacao();
        atualizaLabelBarraDeStatus(arquivo);
    }*/
    
    @Override
    public void atualizar(StyledDocument conteudoPagina) {
        this.pagina.setStyledDocument(conteudoPagina);
        envia();
        // DEVE SER MODIFICADO PARA ATUALIZAR EM REDE
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelBackground = new javax.swing.JPanel();
        barraDeStatus = new javax.swing.JPanel();
        labelBarraDeStatus = new javax.swing.JLabel();
        controleDeslizanteMargemEsquerda = new javax.swing.JSlider();
        controleDeslizanteMargemDireita = new javax.swing.JSlider();
        painelDeRolagemPagina = new javax.swing.JScrollPane();
        pagina = new javax.swing.JTextPane();
        painelSuperior = new javax.swing.JPanel();
        painelAbasSuperiores = new javax.swing.JTabbedPane();
        abaArquivo = new javax.swing.JPanel();
        botaoAbrir = new javax.swing.JButton();
        botaoSalvar = new javax.swing.JButton();
        botaoSalvarComo = new javax.swing.JButton();
        separadorArquivo = new javax.swing.JSeparator();
        botaoEncerrarSecao = new javax.swing.JButton();
        abaEditar = new javax.swing.JPanel();
        botaoNegrito = new javax.swing.JToggleButton();
        botaoItalico = new javax.swing.JToggleButton();
        botaoSublinhado = new javax.swing.JToggleButton();
        separadorEditar1 = new javax.swing.JSeparator();
        comboCorFonte = new javax.swing.JComboBox<>();
        comboFonte = new javax.swing.JComboBox<>();
        comboTamanhoFonte = new javax.swing.JComboBox<>();
        separadorEditar2 = new javax.swing.JSeparator();
        botaoAplicar = new javax.swing.JButton();
        botaoLimparFormatacao = new javax.swing.JButton();
        abaVisualizar = new javax.swing.JPanel();
        botaoModoNoturno = new javax.swing.JToggleButton();
        botaoModoCodigo = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Î±Editor");
        setName("body"); // NOI18N
        setSize(new java.awt.Dimension(0, 0));

        barraDeStatus.setBackground(new java.awt.Color(221, 217, 209));
        barraDeStatus.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        labelBarraDeStatus.setText("Lembre-se de salvar o arquivo.");

        javax.swing.GroupLayout barraDeStatusLayout = new javax.swing.GroupLayout(barraDeStatus);
        barraDeStatus.setLayout(barraDeStatusLayout);
        barraDeStatusLayout.setHorizontalGroup(
            barraDeStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(barraDeStatusLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelBarraDeStatus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        barraDeStatusLayout.setVerticalGroup(
            barraDeStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(barraDeStatusLayout.createSequentialGroup()
                .addComponent(labelBarraDeStatus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        labelBarraDeStatus.getAccessibleContext().setAccessibleName("");

        controleDeslizanteMargemEsquerda.setMaximum(379);
        controleDeslizanteMargemEsquerda.setToolTipText("Margem esquerda");
        controleDeslizanteMargemEsquerda.setValue(100);
        controleDeslizanteMargemEsquerda.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        controleDeslizanteMargemEsquerda.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                controleDeslizanteMargemEsquerdaStateChanged(evt);
            }
        });

        controleDeslizanteMargemDireita.setMaximum(379);
        controleDeslizanteMargemDireita.setToolTipText("Margem direita");
        controleDeslizanteMargemDireita.setValue(100);
        controleDeslizanteMargemDireita.setInverted(true);
        controleDeslizanteMargemDireita.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                controleDeslizanteMargemDireitaStateChanged(evt);
            }
        });

        pagina.setMargin(new java.awt.Insets(2, 100, 2, 100));
        pagina.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                paginaKeyTyped(evt);
            }
        });
        painelDeRolagemPagina.setViewportView(pagina);

        javax.swing.GroupLayout painelBackgroundLayout = new javax.swing.GroupLayout(painelBackground);
        painelBackground.setLayout(painelBackgroundLayout);
        painelBackgroundLayout.setHorizontalGroup(
            painelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(barraDeStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(painelBackgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(painelDeRolagemPagina)
                    .addGroup(painelBackgroundLayout.createSequentialGroup()
                        .addComponent(controleDeslizanteMargemEsquerda, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(controleDeslizanteMargemDireita, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelBackgroundLayout.setVerticalGroup(
            painelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBackgroundLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(painelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(controleDeslizanteMargemEsquerda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(controleDeslizanteMargemDireita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(painelDeRolagemPagina, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(barraDeStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        botaoAbrir.setText("Abrir");
        botaoAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAbrirActionPerformed(evt);
            }
        });

        botaoSalvar.setText("Salvar");
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });

        botaoSalvarComo.setText("Salvar como");
        botaoSalvarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarComoActionPerformed(evt);
            }
        });

        separadorArquivo.setOrientation(javax.swing.SwingConstants.VERTICAL);

        botaoEncerrarSecao.setText("Encerrar seÃ§Ã£o");
        botaoEncerrarSecao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEncerrarSecaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout abaArquivoLayout = new javax.swing.GroupLayout(abaArquivo);
        abaArquivo.setLayout(abaArquivoLayout);
        abaArquivoLayout.setHorizontalGroup(
            abaArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaArquivoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botaoAbrir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoSalvarComo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separadorArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoEncerrarSecao)
                .addContainerGap(669, Short.MAX_VALUE))
        );
        abaArquivoLayout.setVerticalGroup(
            abaArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaArquivoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(abaArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botaoEncerrarSecao)
                    .addGroup(abaArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botaoSalvarComo)
                        .addComponent(botaoAbrir)
                        .addComponent(botaoSalvar))
                    .addComponent(separadorArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        painelAbasSuperiores.addTab("Arquivo", abaArquivo);

        botaoNegrito.setText("<html><b>N</b></html>");
        botaoNegrito.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botaoNegrito.setMargin(new java.awt.Insets(2, 2, 2, 2));

        botaoItalico.setText("<html><i>I</i></html>");
        botaoItalico.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botaoItalico.setMargin(new java.awt.Insets(2, 2, 2, 2));

        botaoSublinhado.setText("<html><u>S</u></html>");
        botaoSublinhado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botaoSublinhado.setMargin(new java.awt.Insets(2, 2, 2, 2));

        separadorEditar1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        comboCorFonte.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Preto", "Vermelho", "Verde", "Azul", "Amarelo", "Laranja", "Rosa" }));

        comboFonte.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Arial", "Calibri", "Courier New", "Tahoma", "Times New Roman", "Verdana" }));
        comboFonte.setSelectedIndex(3);
        comboFonte.setSelectedItem(3);

        comboTamanhoFonte.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8", "9", "10", "11", "12", "14", "16", "18", "20", "22", "24", "26", "28", "36", "48", "72" }));
        comboTamanhoFonte.setSelectedIndex(3);

        separadorEditar2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        botaoAplicar.setText("Aplicar");
        botaoAplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAplicarActionPerformed(evt);
            }
        });

        botaoLimparFormatacao.setText("Limpar formataÃ§Ã£o");
        botaoLimparFormatacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparFormatacaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout abaEditarLayout = new javax.swing.GroupLayout(abaEditar);
        abaEditar.setLayout(abaEditarLayout);
        abaEditarLayout.setHorizontalGroup(
            abaEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaEditarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botaoNegrito, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoItalico, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoSublinhado, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separadorEditar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboCorFonte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboFonte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboTamanhoFonte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separadorEditar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoAplicar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoLimparFormatacao)
                .addContainerGap(478, Short.MAX_VALUE))
        );
        abaEditarLayout.setVerticalGroup(
            abaEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, abaEditarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(abaEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(abaEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botaoAplicar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaoLimparFormatacao))
                    .addComponent(separadorEditar2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(separadorEditar1)
                    .addComponent(comboCorFonte, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboFonte, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboTamanhoFonte, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, abaEditarLayout.createSequentialGroup()
                        .addGroup(abaEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botaoNegrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botaoItalico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botaoSublinhado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        painelAbasSuperiores.addTab("Editar", abaEditar);

        botaoModoNoturno.setText("Modo noturno");
        botaoModoNoturno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoModoNoturnoActionPerformed(evt);
            }
        });

        botaoModoCodigo.setText("Modo cÃ³digo");
        botaoModoCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoModoCodigoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout abaVisualizarLayout = new javax.swing.GroupLayout(abaVisualizar);
        abaVisualizar.setLayout(abaVisualizarLayout);
        abaVisualizarLayout.setHorizontalGroup(
            abaVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaVisualizarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botaoModoNoturno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoModoCodigo)
                .addContainerGap(811, Short.MAX_VALUE))
        );
        abaVisualizarLayout.setVerticalGroup(
            abaVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, abaVisualizarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(abaVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoModoNoturno)
                    .addComponent(botaoModoCodigo))
                .addContainerGap())
        );

        painelAbasSuperiores.addTab("Visualizar", abaVisualizar);

        painelAbasSuperiores.setSelectedIndex(1);

        javax.swing.GroupLayout painelSuperiorLayout = new javax.swing.GroupLayout(painelSuperior);
        painelSuperior.setLayout(painelSuperiorLayout);
        painelSuperiorLayout.setHorizontalGroup(
            painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelAbasSuperiores)
        );
        painelSuperiorLayout.setVerticalGroup(
            painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelAbasSuperiores, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelBackground, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(painelSuperior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(painelSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(painelBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void paginaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paginaKeyTyped
        // ACHO QUE TEM QUE SER UM SINGLETON
        // Instancia Ãºnica do pai, para ser usado aqui,
        // onde poderei chamar pai.notificarObservadores()
        fachada.modoCodigo();
        try {
            atualizar(this.pagina.getStyledDocument());
            //instancia.notificarObservadores();
        } catch (NullPointerException ex) {
            //JOptionPane.showMessageDialog(this, "O usuÃ¡rio provedor do documento encerrou a seÃ§Ã£o.\nEste documento nÃ£o pode mais ser editado por vocÃª.", "SeÃ§Ã£o encerrada", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_paginaKeyTyped

    private void controleDeslizanteMargemDireitaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_controleDeslizanteMargemDireitaStateChanged
        bordaDireita = controleDeslizanteMargemDireita.getValue();
        pagina.setBorder(BorderFactory.createCompoundBorder(bordaPagina, BorderFactory.createEmptyBorder(2, bordaEsquerda, 2, bordaDireita)));
    }//GEN-LAST:event_controleDeslizanteMargemDireitaStateChanged

    private void controleDeslizanteMargemEsquerdaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_controleDeslizanteMargemEsquerdaStateChanged
        bordaEsquerda = controleDeslizanteMargemEsquerda.getValue();
        pagina.setBorder(BorderFactory.createCompoundBorder(bordaPagina, BorderFactory.createEmptyBorder(2, bordaEsquerda, 2, bordaDireita)));
    }//GEN-LAST:event_controleDeslizanteMargemEsquerdaStateChanged

    private void botaoLimparFormatacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparFormatacaoActionPerformed
        limparFormatacao();
    }//GEN-LAST:event_botaoLimparFormatacaoActionPerformed

    private void botaoAplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAplicarActionPerformed
        fontStyle(botaoNegrito.isSelected(), botaoItalico.isSelected(), botaoSublinhado.isSelected(), fontMap(comboFonte.getSelectedIndex()), colorMap(comboCorFonte.getSelectedIndex()), fontSizeMap(comboTamanhoFonte.getSelectedIndex()), 1);
        botaoNegrito.setSelected(false);
        botaoItalico.setSelected(false);
        botaoSublinhado.setSelected(false);
    }//GEN-LAST:event_botaoAplicarActionPerformed

    private void botaoEncerrarSecaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEncerrarSecaoActionPerformed
        InitSection.getInstancia().getBodiesNames().remove(nomeObservador);
        pagina = null;
        arquivo = null;
        nomeObservador = null;
        this.dispose();
        InitSection.getInstancia().setVisible(true);
    }//GEN-LAST:event_botaoEncerrarSecaoActionPerformed

    private void botaoSalvarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarComoActionPerformed
        salvarRTF(true);
        atualizar(pagina.getStyledDocument());
        instancia.notificarObservadores();
        atualizaLabelBarraDeStatus(arquivo);
    }//GEN-LAST:event_botaoSalvarComoActionPerformed

    private void botaoModoNoturnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoModoNoturnoActionPerformed
        fachada.modoNoturno();
    }//GEN-LAST:event_botaoModoNoturnoActionPerformed

    private void botaoAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAbrirActionPerformed
        definirEstrategiaLeitura();
        //this.pagina = leitor.executar(this.arquivo);
        this.pagina.setText(leitor.executar(this.arquivo).getText());
        atualizar(leitor.executar(this.arquivo).getStyledDocument());
        instancia.notificarObservadores();
        //this.arquivo = estrategia.getArquivo();
        atualizaLabelBarraDeStatus(this.arquivo);
    }//GEN-LAST:event_botaoAbrirActionPerformed

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarActionPerformed
        if (arquivo.getPath().endsWith(".txt")) {
            salvarTXT(false);
        } else {
            salvarRTF(false);
        }
        instancia.notificarObservadores();
        atualizaLabelBarraDeStatus(this.arquivo);
    }//GEN-LAST:event_botaoSalvarActionPerformed

    private void botaoModoCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoModoCodigoActionPerformed
        fachada.modoCodigo();
        if (botaoModoCodigo.isSelected()) {
            JOptionPane.showMessageDialog(this, "Linguagem de programaÃ§Ã£o aceita: Python", "Modo cÃ³digo", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_botaoModoCodigoActionPerformed
    int var = 0;        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Body.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Body.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Body.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Body.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Body(nomeObservador, instancia, pagina, conexao).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel abaArquivo;
    private javax.swing.JPanel abaEditar;
    private javax.swing.JPanel abaVisualizar;
    private javax.swing.JPanel barraDeStatus;
    private javax.swing.JButton botaoAbrir;
    private javax.swing.JButton botaoAplicar;
    private javax.swing.JButton botaoEncerrarSecao;
    private javax.swing.JToggleButton botaoItalico;
    private javax.swing.JButton botaoLimparFormatacao;
    private javax.swing.JToggleButton botaoModoCodigo;
    private javax.swing.JToggleButton botaoModoNoturno;
    private javax.swing.JToggleButton botaoNegrito;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JButton botaoSalvarComo;
    private javax.swing.JToggleButton botaoSublinhado;
    private javax.swing.JComboBox<String> comboCorFonte;
    private javax.swing.JComboBox<String> comboFonte;
    private javax.swing.JComboBox<String> comboTamanhoFonte;
    private javax.swing.JSlider controleDeslizanteMargemDireita;
    private javax.swing.JSlider controleDeslizanteMargemEsquerda;
    private javax.swing.JLabel labelBarraDeStatus;
    private static javax.swing.JTextPane pagina;
    private javax.swing.JTabbedPane painelAbasSuperiores;
    private javax.swing.JPanel painelBackground;
    private javax.swing.JScrollPane painelDeRolagemPagina;
    private javax.swing.JPanel painelSuperior;
    private javax.swing.JSeparator separadorArquivo;
    private javax.swing.JSeparator separadorEditar1;
    private javax.swing.JSeparator separadorEditar2;
    // End of variables declaration//GEN-END:variables
    // Personal variables declaration
    private Border bordaPagina = BorderFactory.createLineBorder(Color.WHITE);
    private javax.swing.JFileChooser fileSelector = new javax.swing.JFileChooser();
    private File arquivo;
    private int bordaEsquerda = 100;
    private int bordaDireita = 100;
    private Style normal;
    private Style negrito;
    private Style italico;
    private static String nomeObservador;
    private static Observado instancia;
    private static Conexao conexao;
    private visual.EstrategiaDeLeitura leitor;
    private Facade fachada = new Facade(this);
    // End of personal variables declaration

    /*private void initStyles() {
        normal = StyleContext.getDefaultStyleContext().getStyle(
                StyleContext.DEFAULT_STYLE);

        negrito = pagina.getStyledDocument().addStyle("bold", normal);
        StyleConstants.setBold(negrito, true);

        italico = pagina.getStyledDocument().addStyle("italic", normal);
        StyleConstants.setItalic(italico, true);
    }*/
    
    public String getNomeObservador() {
        return nomeObservador;
    }
    
    public void fontStyle(boolean bold, boolean italic, boolean under, String fontFamily, Color color, int size, int tipo){        
        String textSelected = null;
        int count = 0;
        int start = 0;
        int end = 0;
        try {
            end = pagina.getSelectionEnd();
            start = pagina.getSelectionStart();        
            count = pagina.getSelectedText().length();
            textSelected= pagina.getSelectedText();            
        } catch (NullPointerException e) {

        }


        SimpleAttributeSet attributes = new SimpleAttributeSet();                       
        StyleConstants.setBold(attributes, bold);
        StyleConstants.setUnderline(attributes, under);  
        StyleConstants.setItalic(attributes, italic);
        StyleConstants.setFirstLineIndent(attributes, 400);
        if(tipo == 1){
            StyleConstants.setFontFamily(attributes, fontFamily);
            StyleConstants.setForeground(attributes,color);
            StyleConstants.setFontSize(attributes, size);         
        }       
        if (textSelected != null) {            
            try {                                           
                pagina.getStyledDocument().remove(start,count);     

            } catch (BadLocationException ex) {
                //Logger.getLogger(Create.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                 pagina.getStyledDocument().insertString(start,textSelected , attributes);
                 pagina.select(start, end);
                 pagina.setSelectedTextColor(color);                                  
            } catch (BadLocationException ex) {
                 //Logger.getLogger(Create.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {            
            try {
                 pagina.getStyledDocument().insertString(pagina.getStyledDocument().getLength()," " , attributes);
            } catch (BadLocationException ex) {
                 //Logger.getLogger(Create.class.getName()).log(Level.SEVERE, null, ex);
            }
        }        
    }
    
    public void limparFormatacao() {
        fontStyle(false, false, false, fontMap(0), colorMap(0), fontSizeMap(4), 1);
        botaoNegrito.setSelected(false);
        botaoItalico.setSelected(false);
        botaoSublinhado.setSelected(false);
        comboFonte.setSelectedIndex(0);
        comboCorFonte.setSelectedIndex(0);
        comboTamanhoFonte.setSelectedIndex(4);
    }
    
    public void atualizaLabelBarraDeStatus(File file) {
        if (file != null) {
            this.labelBarraDeStatus.setText(file.getPath() + ". Lembre-se de salvar o seu documento.");
        } else {
            this.labelBarraDeStatus.setText("Lembre-se de salvar o seu documento.");
        }
    }
        
    public Color colorMap(int index) {
        switch (index) {
            case 0:
                return Color.BLACK;
            case 1:
                return Color.RED;
            case 2:
                return Color.GREEN;
            case 3:
                return Color.BLUE;
            case 4:
                return Color.YELLOW;
            case 5:
                return Color.ORANGE;
            case 6:
                return Color.PINK;
            default:
                return Color.BLACK;
        }
    }
    
    public String fontMap(int index) {
        switch (index) {
            case 0:
                return "Arial";
            case 1:
                return "Calibri";
            case 2:
                return "Courier New";
            case 3:
                return "Tahoma";
            case 4:
                return "Times New Roman";
            case 5:
                return "Verdana";
            default:
                return "Arial";
        }
    }
    
    public int fontSizeMap(int index) {
        switch (index) {
            case 0:
                return 8;
            case 1:
                return 9;
            case 2:
                return 10;
            case 3:
                return 11;
            case 4:
                return 12;
            case 5:
                return 14;
            case 6:
                return 16;
            case 7:
                return 18;
            case 8:
                return 20;
            case 9:
                return 22;
            case 10:
                return 24;
            case 11:
                return 26;
            case 12:
                return 28;
            case 13:
                return 36;
            case 14:
                return 48;
            case 15:
                return 72;
            default:
                return 12;
        }
    }
    
    public void definirEstrategiaLeitura() {
        int returnVal = fileSelector.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            this.arquivo = fileSelector.getSelectedFile();
            if (this.arquivo.getPath().endsWith(".txt")) {
                leitor = new LerTXT(this.arquivo);
            } else {
                leitor = new LerRTF(this.arquivo);
            }
        } else {
            System.out.println("Acesso ao arquivo cancelado pelo usuÃ¡rio.");
        }
    }
    
    public void salvarRTF(boolean acao) {
        // acao false = salvar
        // acao true  = salvar como
        try {
            if ((this.arquivo == null) || (acao)) {
                int returnVal = fileSelector.showSaveDialog(this.pagina);
                if (returnVal == JFileChooser.APPROVE_OPTION) {
                    this.arquivo = fileSelector.getSelectedFile();
                }
            }
            String caminho = this.arquivo.getPath();
            StyledDocument doc = this.pagina.getStyledDocument();
            RTFEditorKit kit = new RTFEditorKit();
            if (!(caminho.endsWith(".rtf"))) {
                caminho = caminho + ".rtf";
            }
            try {
                FileOutputStream outStream = new FileOutputStream(caminho);
                kit.write(outStream, doc, 0, doc.getLength());
                outStream.close();
            } catch (IOException ex) {
                ex.printStackTrace();
            } catch (BadLocationException ex) {
                ex.printStackTrace();
            }
        } catch (NullPointerException ex) {
            ex.printStackTrace();
        }

    }
    
    public void salvarTXT(boolean acao) {
        if ((this.arquivo == null) || (acao)) {
            int returnVal = fileSelector.showSaveDialog(this.pagina);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                this.arquivo = fileSelector.getSelectedFile();
            }
        }
        String caminho = this.arquivo.getPath();
        if (!(caminho.endsWith(".txt"))) {
            caminho = caminho + ".txt";
        }
        try {
            FileWriter arq = new FileWriter(caminho);
            BufferedWriter escreverArquivo = new BufferedWriter(arq);
            escreverArquivo.write(this.pagina.getText());
            escreverArquivo.close();
        } catch (IOException ex) {
            Logger.getLogger(Body.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public JTextPane getPagina() {
        return this.pagina;
    }
    
    public JToggleButton getBotaoModoCodigo() {
        return this.botaoModoCodigo;
    }
    
    public JSlider getControleDeslizanteMargemDireita() {
        return controleDeslizanteMargemDireita;
    }

    public JSlider getControleDeslizanteMargemEsquerda() {
        return controleDeslizanteMargemEsquerda;
    }

    public JToggleButton getBotaoModoNoturno() {
        return botaoModoNoturno;
    }

    public JPanel getPainelBackground() {
        return painelBackground;
    }

    public JComboBox getComboFonte() {
        return comboFonte;
    }
    
    public JComboBox getComboTamanhoFonte() {
        return comboTamanhoFonte;
    }
    
    private void envia() {
        if (!pagina.getText().isEmpty()) {
            try{
                if (!InetAddress.getLocalHost().getHostAddress().equalsIgnoreCase(conexao.getIp())) {
                    conexao.envia(pagina.getText());
                    //pagina.setText("");
                } else {
                    //pagina.setText("");
                }
            } catch (Exception e) {
            }
        }
    }
    
}
